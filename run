#!/usr/bin/env bash

ROOT_DEVICE="http://10.0.0.1:5000/rootDesc.xml"

function forward() {
  local network_driver=$1
  local external_port=$2
  local internal_port=$3
  local protocol=$4
  local machine=$5
  local description="Portical ${protocol} ${external_port} -> ${machine}:${internal_port}"

  case $network_driver in

    macvlan | ipvlan)
      echo "Run upnpc from container network so that internet gateway does not block it"
      docker run --rm --network container:${machine} danielbodart/portical \
        upnpc -u "${ROOT_DEVICE}" -e "${description}" -r "${internal_port}" "${external_port}" "${protocol}"
      ;;

    host | bridge)
      echo "Run upnpc from container network so that internet gateway does not block it"
      upnpc -u "${ROOT_DEVICE}" -e "${description}" -r "${internal_port}" "${external_port}" "${protocol}"
      ;;

    *)
      echo "Unsupported network driver: ${network_driver}. Skipping..."
      ;;
  esac

}

function extract_rule() {
  if [[ $1 =~ portical\.upnp\.forward:([0-9]+):([0-9]+)(/(tcp|udp))? ]]; then
      external_port="${BASH_REMATCH[1]}"
      internal_port="${BASH_REMATCH[2]}"
      protocol="${BASH_REMATCH[4]}"
  fi
}

function find() {
  docker ps --filter "label=portical.upnp.forward" --format '{{.Names}}' | while read container; do
    labels=$(docker inspect -f '{{.Config.Labels}}' "$container")
    network_name=$(docker inspect -f '{{range $key, $_ := .NetworkSettings.Networks}}{{ $key }}{{end}}' "$container")
    network_driver=$(docker network inspect -f '{{.Driver}}' "$network_name")

    extract_rule "${labels}"

    echo ""
    echo "Container: $container, Driver: $network_driver, External Port: $external_port, Internal Port: $internal_port, Protocol: ${protocol}"

    if [[ $protocol == "" ]]; then
      forward $network_driver $external_port $internal_port tcp $container
      forward $network_driver $external_port $internal_port udp $container
    else
      forward $network_driver $external_port $internal_port $protocol $container
    fi
  done
}


command="${1-find}"
set +e; shift;
$command "$@"